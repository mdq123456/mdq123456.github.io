name: 🚀 Release Manual

on:
  workflow_dispatch:
    inputs:
      description:
        description: 'Descripción del release (opcional)'
        required: false
        default: 'Actualización del portfolio'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🔧 Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: 🏷️ Create CalVer release
        id: release
        run: |
          # Generar versión CalVer (YYYY.MM.DD)
          NEW_VERSION=$(date +'%Y.%m.%d')
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Actualizar package.json
          npm version $NEW_VERSION --no-git-tag-version

          # Actualizar CHANGELOG.md
          TODAY=$(date +'%Y-%m-%d')
          TEMP_FILE=$(mktemp)

          # Crear nueva entrada en changelog
          echo "# Changelog" > $TEMP_FILE
          echo "" >> $TEMP_FILE
          echo "Historial de cambios del portfolio profesional." >> $TEMP_FILE
          echo "" >> $TEMP_FILE
          echo "Formato de versionado: **CalVer YYYY.MM.DD**" >> $TEMP_FILE
          echo "" >> $TEMP_FILE
          echo "---" >> $TEMP_FILE
          echo "" >> $TEMP_FILE
          echo "## [$NEW_VERSION] - $TODAY" >> $TEMP_FILE
          echo "" >> $TEMP_FILE
          echo "### 📝 Cambios" >> $TEMP_FILE
          echo "- ${{ inputs.description }}" >> $TEMP_FILE
          echo "- Actualización automática desde GitHub Actions" >> $TEMP_FILE
          echo "- Build y deploy de la versión v$NEW_VERSION" >> $TEMP_FILE
          echo "" >> $TEMP_FILE
          echo "---" >> $TEMP_FILE
          echo "" >> $TEMP_FILE

          # Agregar contenido anterior del changelog (excluyendo header)
          tail -n +8 CHANGELOG.md >> $TEMP_FILE

          # Reemplazar changelog
          mv $TEMP_FILE CHANGELOG.md

          # Commit y tag
          git add package.json CHANGELOG.md
          git commit -m "chore: release v$NEW_VERSION"
          git tag "v$NEW_VERSION"

          echo "✅ Versión v$NEW_VERSION creada"

      - name: 📤 Push changes
        run: |
          git push --follow-tags origin ${{ github.ref_name }}

      - name: 🎉 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.release.outputs.new_version }}
          release_name: 📦 Release v${{ steps.release.outputs.new_version }}
          body: |
            ## 🚀 Nuevo Release del Portfolio

            **Versión**: `v${{ steps.release.outputs.new_version }}`
            **Fecha**: $(date +'%d de %B de %Y')
            **Rama**: `${{ github.ref_name }}`

            ### 📝 Descripción
            ${{ inputs.description }}

            ### 🔗 Enlaces
            - [Ver Portfolio](https://mdq123456.github.io)
            - [Ver Changelog](https://github.com/mdq123456/mdq123456.github.io/blob/main/CHANGELOG.md)

            ---

            _Generado automáticamente desde GitHub Actions_
          draft: false
          prerelease: false

      - name: 📊 Summary
        run: |
          echo "## 🎉 Release Creado Exitosamente" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Versión**: v${{ steps.release.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Rama**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Descripción**: ${{ inputs.description }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Enlaces útiles" >> $GITHUB_STEP_SUMMARY
          echo "- [Ver Portfolio](https://mdq123456.github.io)" >> $GITHUB_STEP_SUMMARY
          echo "- [Ver Release](https://github.com/mdq123456/mdq123456.github.io/releases/latest)" >> $GITHUB_STEP_SUMMARY
